@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
skinparam style strictuml
package "pumlFromJava"
{
    class PumlDoclet
    {
        -String : name {readOnly}
        -boolean : hasArg {readOnly}
        -String : description {readOnly}
        -String : parameters {readOnly}
        -String : out
        -String : d


        Option(String name, boolean hasArg, String description, String parameters)
        +getArgumentCount(): Int
        +getDescription(): String
        +getKind(): Kind
        +getNames(): List<String>
        +getParameters() : String
        +init(Locale locale, Reporter reporter)
        +getName() : String
        +getSupportedOptions() : Set<? extends Option>
        +getSupportedSourceVersion() : SourceVersion
        +run(DocletEnvironment environment) : boolean

    }
    class Java2Puml
    {
        + {static} main(String[])

    }
    class PumlDiagram
    {
        -FileWriter file {static}
        -createFile(String name_file , String dir_file) {static}
        +genereStart(String name_file , String dir_file)  {static}
        +generePrincipal(DocletEnvironment environment) {static}
        +createElementIntoFile(Element element) {static}
        +genereEnd() {static}
    }

    class CreateFirstElement
    {
        -String : builduml

        +CreateFirstElement(Element element)
        +run()
        +getBuildUml() : String
    }
    PumlDoclet --> PumlDiagram : "Create"
    PumlDoclet --> CreateFirstElement : "Instantiate"



}
class pumlFromJava.Helper {
- {static} String classForObjectType {readOnly}
+ {static} boolean isPrimitiveObject(TypeMirror) {static}
}

class pumlFromJava.CreateInterElement {
+ String getStringElementStart()
+ String getStringElementEnd()
+ String getStringElementStartEnd()
}

class pumlFromJava.CreateClassElement {
+ String getStringElementStart()
+ String getStringElementEnd()
+ String getStringElementStartEnd()
+ String getStringElementAll()
+ ArrayList<CreateFieldElement> getField()
+ String getStringFields()
}

class pumlFromJava.CreateFieldElement {
- boolean isPrimitive
- Set<Modifier> modifiier
+ boolean CheckPrimitive()
+ Set<Modifier> giveModifier()
+ boolean getIsPrimitive()
+ String getFields()
}


abstract class pumlFromJava.ElementDefault {
- Element element
- String name
- String enclosing
- List<? extends Element> elementEnclosed
+ Element getElement()
+ String getName()
+ String getEnclosing()
+ String getNameAndEnclosing()
+ List<? extends Element> getElementEnclosed()
}

class pumlFromJava.CreateEnumElement {
- ArrayList<String> AttributEnum
+ String getStringElementStart()
+ String getStringElementEnd()
+ String getStringElementStartEnd()
+ String getStringElementAll()
+ ArrayList<String> getAttributEnum()
+ String getStringAttributEnum()
}

jdk.javadoc.doclet.Doclet <|.. pumlFromJava.PumlDoclet
pumlFromJava.ElementDefault <|-- pumlFromJava.CreateInterElement
pumlFromJava.ElementDefault <|-- pumlFromJava.CreateClassElement
pumlFromJava.ElementDefault <|-- pumlFromJava.CreateFieldElement
pumlFromJava.ElementDefault <|-- pumlFromJava.CreateEnumElement
pumlFromJava.ElementDefault <|-- pumlFromJava.CreateFirstElement

CreateClassElement -- "*" CreateFieldElement : > fields


Java2Puml --> JavaDoc : "Use"
/'interface Doclet {
    + init(locale : Locale, reporter : Reporter)
    + getName() : String
    + SourceVersion getSupportedSourceVersion()
    + run(environment : DocletEnvironment) : Boolean
}'/




@enduml