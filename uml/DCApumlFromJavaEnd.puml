@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
skinparam style strictuml
hide empty members

class pumlFromJava.CreateMethodElement  {
}

pumlFromJava.CreateMethodElement --> "\t*\n\t\n" javax.lang.model.element.Modifier
pumlFromJava.CreateMethodElement --> "\t*\n\t\n" javax.lang.model.element.AnnotationMirror
pumlFromJava.CreateMethodElement --> "\t1\n\t\n" javax.lang.model.element.ExecutableElement

class pumlFromJava.CreateConstructorElement  {
}

pumlFromJava.CreateConstructorElement --> "\t*\n\t\n" javax.lang.model.element.Modifier
pumlFromJava.CreateConstructorElement --> "\t*\n\t\n" javax.lang.model.element.AnnotationMirror
pumlFromJava.CreateConstructorElement --> "\t1\n\t\n" javax.lang.model.element.ExecutableElement

class pumlFromJava.FirstDoclet  implements jdk.javadoc.doclet.Doclet{
}


class pumlFromJava.PumlDoclet  implements jdk.javadoc.doclet.Doclet{
	out
	d
	dca
}

pumlFromJava.PumlDoclet --> "\t*\n\t\n" pumlFromJava.PumlDoclet.Option

class pumlFromJava.CreateImpleElement  {
	isImplements
}

pumlFromJava.CreateImpleElement --> "\t1\n\t\n" javax.lang.model.element.TypeElement
pumlFromJava.CreateImpleElement --> "\t*\n\t\n" javax.lang.model.type.TypeMirror

class pumlFromJava.CreateEnumElement extends pumlFromJava.ElementDefault {
	AttributEnum
}


class pumlFromJava.CreateInterElement extends pumlFromJava.ElementDefault {
}

pumlFromJava.CreateInterElement --> "\t*\n\t\n" pumlFromJava.CreateMethodElement
pumlFromJava.CreateInterElement --> "\t1\n\t\n" pumlFromJava.CreateImpleElement

class pumlFromJava.CreateFieldSpecialElement extends pumlFromJava.ElementDefault {
	elementFirst
	elementSecond
	elementSecondIsArray
	elementSecndIsStatic
	elementSecondIsMap
}

pumlFromJava.CreateFieldSpecialElement --> "\t*\n\t\n" javax.lang.model.element.Modifier
pumlFromJava.CreateFieldSpecialElement --> "\t*\n\t\n" javax.lang.model.element.AnnotationMirror

class pumlFromJava.CreateFirstElement extends pumlFromJava.ElementDefault {
	buildUml
	dca
}


class pumlFromJava.Helper  {
	classPrimitiveForObjectType
	classArrayForObjectType
	classMapForObjectType
}


class pumlFromJava.ElementDefault  {
	name
	enclosing
}

pumlFromJava.ElementDefault --> "\t1\n\t\n" javax.lang.model.element.Element
pumlFromJava.ElementDefault --> "\t*\n\t\n" javax.lang.model.element.Element

class pumlFromJava.CreateClassElement extends pumlFromJava.ElementDefault {
}

pumlFromJava.CreateClassElement --> "\t*\n\t\n" pumlFromJava.CreateFieldElement
pumlFromJava.CreateClassElement --> "\t*\n\t\n" pumlFromJava.CreateConstructorElement
pumlFromJava.CreateClassElement --> "\t*\n\t\n" pumlFromJava.CreateMethodElement
pumlFromJava.CreateClassElement --> "\t1\n\t\n" pumlFromJava.CreateExtendsElement
pumlFromJava.CreateClassElement --> "\t1\n\t\n" pumlFromJava.CreateImpleElement

class pumlFromJava.Java2Puml  {
}


class pumlFromJava.CreateExtendsElement  {
	objectClass
	isExtends
	nameExtends
}

pumlFromJava.CreateExtendsElement --> "\t1\n\t\n" javax.lang.model.element.TypeElement

class pumlFromJava.CreateFieldElement extends pumlFromJava.ElementDefault {
	isPrimitive
}

pumlFromJava.CreateFieldElement --> "\t*\n\t\n" javax.lang.model.element.Modifier
pumlFromJava.CreateFieldElement --> "\t1\n\t\n" pumlFromJava.CreateFieldSpecialElement

class pumlFromJava.PumlDiagram  {
}

pumlFromJava.PumlDiagram --> "\t1\n\t\n" java.io.FileWriter

note "Launch javadoc to PumlDoclet with args" as N2
Java2Puml .. N2
N2 .. PumlDoclet

@enduml
