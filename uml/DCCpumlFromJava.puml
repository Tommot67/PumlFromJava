@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
skinparam style strictuml

package "pumlFromJava"
{
    class PumlDoclet
    {
        - String : name {readOnly}
        - boolean : hasArg {readOnly}
        - String : description {readOnly}
        - String : parameters {readOnly}
        - boolean : dca {readOnly}
        - String : out
        - String : d
        Option(String : name, boolean : hasArg, String : description, String : parameters)
        + getArgumentCount() : Int
        + getDescription() : String
        + getKind() : Kind
        + getNames(): String[*]
        + getParameters() : String
        + init(Locale : locale, Reporter : reporter)
        + getName() : String
        + getSupportedOptions() : Set<? extends Option>
        + getSupportedSourceVersion() : SourceVersion
        + run(DocletEnvironment : environment) : boolean
    }
    class Java2Puml
    {
        + {static} main(String[])
    }

    class PumlDiagram
    {
        - FileWriter : file {static}
        - createFile(String : name_file , String : dir_file) {static}
        + genereStart(String : name_file , String : dir_file)  {static}
        + generePrincipal(String : element_string) {static}
        + genereEnd() {static}
    }

    class CreateFirstElement
    {
        - String : builduml
        + <<Create>> CreateFirstElement(Element : element)
        + run()
        + getBuildUml() : String
    }

    class CreateExtendsElement
    {
        - String {static} : objectClass {readOnly}
        - boolean : isExtends
        - String : nameExtends
        - TypeElement : typeElement
        + <<Create>> CreateExtendsElement(Element : element)
        - setIsExtends()
        + getIsExtendsVal() : boolean
        - setNameExtends()
        + getNameExtends() : String
        + getStringExtends() : String
    }

    class Helper
    {
        - {static} classPrimitiveForObjectType {readOnly} : String
        - {static} classArrayForObjectType {readOnly} : String
        + {static} isPrimitiveObject(TypeMirror : type_test) : boolean
        + {static} isArrayObject(TypeMirror : type_test) : boolean
        + {static} stringPrimitveObject(TypeMirror type_test) : String
        + {static} stringArrayObject(TypeMirror type_test) : String
        + {static} upperFirstChar(String string) : String
        + {static} getStringType(TypeMirror type_test) : String
        + {static} getStringModifier(Set<Modifier> modifiers) : String
    }

    class CreateInterElement extends ElementDefault
    {
        - methods : ArrayList<CreateMethodElement>
        - impleElement : CreateImpleElement
        + <<Create>> CreateInterElement(Element : element)
        + getStringElementStart() : String
        + getStringElementStartPlus() : String
        + getStringElementEnd() : String
        + getStringElementAllPlus() : String
        + getStringElementStartEnd() : String
        + getStringElementStartEndPlus() : String
        + getStringElementDCC() : String
        + getStringElementDCA() : String
        + getStringMethods() : String
    }

    class CreateClassElement
    {
        - fields : ArrayList<CreateFieldElement>
        - constructors : ArrayList<CreateConstructorElement>
        - methods : ArrayList<CreateMethodElement>
        - extendsElement : CreateExtendsElement
        - impleElement : CreateImpleElement
        + <<Create>> CreateClassElement(Element : element)
        + getStringElementStart() : String
        + getStringElementStartWithExtends() : String
        ''+ getStringElementStartPlus() : String
        + getStringElementEnd() : String
        ''+ getStringElementStartEnd() : String
        ''+ getStringElementAll() : String
        + getStringElementDCC() : String
        + getStringElementDCA() : String
        ''+ getStringElementAllPlus() : String
        + getFields() : CreateFieldElement[*]
        + getConstructor() : ArrayList<CreateConstructorElement>
        + getMethods() : ArrayList<CreateMethodElement>
        + getStringFieldsPrimitive(): String
        + getStringFieldsPrimitiveForDCA() : String
        + getStringFieldsNotPrimitive() : String
        + getStringMethods() : String
        + getStringConstructors() : String
    }

    class CreateFieldElement
    {
        - boolean : isPrimitive
        - Set<Modifier> : modifier
        - fieldSpecialElement : CreateFieldSpecialElement
        + <<Create>> CreateFieldElement(Element : element)
        + CheckPrimitive() : boolean
        + getModifier() : Set<Modifier>
        + getFieldPrimitive() : String
        + getFieldPrimitiveForDCA() : String
        + setFieldNotPrimitive() :
        + getFieldNotPrimitive() : String
    }

    abstract class ElementDefault
    {
        - Element : element
        - String : name
        - String : enclosing
        - List<? extends Element> : elementEnclosed
        + <<Create>> ElementDefault(Element : element)
        + getElement() : Element
        + getName() : String
        + getEnclosing() : String
        + getNameAndEnclosing() : String
        + getElementEnclosed() : List<? extends Element>
    }

    class CreateEnumElement
    {
        - String[*] : AttributEnum
        + <<Create>> CreateEnumElement(Element : element)
        + getStringElementStart() : String
        + getStringElementEnd() : String
        + getStringElementStartEnd() : String
        + getStringElementAll() : String
        + getAttributEnum() : String[*]
        + getStringAttributEnum() : String
    }

    class CreateImpleElement {
        - TypeElement : typeElement
        - boolean : isImplements
        - TypeMirror[*] : interfacesImplements
        + <<Create>> CreateImpleElement(Element : element)
        - setIsImplements()
        + getIsImplementVal() : boolean
        - setinterfacesImplements()
        + getinterfacesImplements() : TypeMirror[*]
        + getStringImplements() : String
        + getStringExtendsInterface() : String
    }

    class CreateFieldSpecialElement
    {
        - String : elementFirst
        - String : elementSecond
        - boolean : elementSecondIsArray
        + <<Create>> CreateFieldSpecialElement(Element : element)
        + setElementFirst()
        + setElementSecond()
        + setElementSecondIsArray()
        + getStringElement() : String
    }

    class CreateConstructorElement
    {
        - modifiers : Set<Modifier>
        - annotationMirrors : List<? extends AnnotationMirror>
        - executableElement : ExecutableElement
        + <<Create>> CreateConstructorElement(Element element)
        + getName() : String
        + getModifiers() : Set<Modifier>
        + getConstructor() : String
        + getStringParametre() : String

    }

    class CreateMethodElement
    {
        - modifiers : Set<Modifier>
        - annotationMirrors : List<? extends AnnotationMirror>
        - executableElement : ExecutableElement
        + <<Create>> CreateMethodElement(Element element)
        + getModifiers() : Set<Modifier>
        + getAnnotation() : List<? extends AnnotationMirror>
        + getMethod() : String
        + getStringParametre() : String
        + getStringRetour() : String
        + getStringAnnotation() : String
    }

    jdk.javadoc.doclet.Doclet <|.. PumlDoclet
    ElementDefault <|-- CreateClassElement
    ElementDefault <|-- CreateFieldElement
    ElementDefault <|-- CreateEnumElement
    ElementDefault <|-- CreateFirstElement
    ElementDefault <|-- CreateFieldSpecialElement
    PumlDoclet --> PumlDiagram : "Create"
    PumlDoclet --> CreateFirstElement : "Instantiate"
    CreateClassElement --> CreateConstructorElement : "Instantiate"
    CreateFirstElement --> CreateClassElement : "Instantiate"
    CreateFirstElement --> CreateEnumElement : "Instantiate"
    CreateClassElement --> CreateExtendsElement : "Instantiate"
    CreateFieldElement --> CreateFieldSpecialElement : "Instantiate"
    CreateClassElement --> CreateFieldElement : "Instantiate"
    CreateClassElement --> CreateImpleElement : "Instantiate"
    CreateInterElement --> CreateImpleElement : "Instantiate"

    CreateFirstElement --> CreateInterElement : "Instantiate"
    CreateClassElement --> CreateMethodElement: "Instantiate"
    CreateInterElement --> CreateMethodElement : "Instantiate"
    


}

note "Launch javadoc to PumlDoclet with args" as N2
Java2Puml .. N2
N2 .. PumlDoclet

@enduml